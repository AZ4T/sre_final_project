# .github/workflows/ci-cd.yml
name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout your code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2) Setup Node.js (for running tests)
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      # 3) Install dependencies inside app/
      - name: Install dependencies
        working-directory: app
        run: npm install

      # 4) Run tests inside app/
      - name: Run tests
        working-directory: app
        run: npm test

      # 5) Copy files to EC2 via rsync (only if tests passed)
      - name: Copy app/ to EC2
        if: success()
        run: |
          set -e

          # 5a) Create ~/.ssh, write the private key from the secret, and lock down permissions:
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # 5b) Disable StrictHostKeyChecking so that first-time host key prompts do not hang
          printf "Host *\n    StrictHostKeyChecking no\n" > ~/.ssh/config

          # 5c) Make sure the remote folder exists on EC2 (so rsync destination is valid)
          ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} \
            "mkdir -p ${{ secrets.APP_PATH }}"

          # 5d) Rsync only the contents of ./app/ to the remote EC2:${APP_PATH}/
          rsync -avz -e "ssh -i ~/.ssh/id_rsa" \
            ./app/ ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:${{ secrets.APP_PATH }}/

      # 6) Restart the Node service on EC2
      - name: Restart Node service on EC2
        if: success()
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          ssh_args: -o StrictHostKeyChecking=no
          script: |
            set -e
            cd ${{ secrets.APP_PATH }}
            npm install --production
            sudo systemctl restart node-app.service

